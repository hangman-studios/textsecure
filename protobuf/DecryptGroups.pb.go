//*
// Copyright (C) 2019 Open Whisper Systems
//
// Licensed according to the LICENSE file in this repository.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: DecryptGroups.proto

package signalservice

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnabledState int32

const (
	EnabledState_UNKNOWN  EnabledState = 0
	EnabledState_ENABLED  EnabledState = 1
	EnabledState_DISABLED EnabledState = 2
)

// Enum value maps for EnabledState.
var (
	EnabledState_name = map[int32]string{
		0: "UNKNOWN",
		1: "ENABLED",
		2: "DISABLED",
	}
	EnabledState_value = map[string]int32{
		"UNKNOWN":  0,
		"ENABLED":  1,
		"DISABLED": 2,
	}
)

func (x EnabledState) Enum() *EnabledState {
	p := new(EnabledState)
	*p = x
	return p
}

func (x EnabledState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnabledState) Descriptor() protoreflect.EnumDescriptor {
	return file_DecryptGroups_proto_enumTypes[0].Descriptor()
}

func (EnabledState) Type() protoreflect.EnumType {
	return &file_DecryptGroups_proto_enumTypes[0]
}

func (x EnabledState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnabledState.Descriptor instead.
func (EnabledState) EnumDescriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{0}
}

// Decrypted version of Member
// Keep field numbers in step
type DecryptedMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid             []byte      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Role             Member_Role `protobuf:"varint,2,opt,name=role,proto3,enum=Member_Role" json:"role,omitempty"`
	ProfileKey       []byte      `protobuf:"bytes,3,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	JoinedAtRevision uint32      `protobuf:"varint,5,opt,name=joinedAtRevision,proto3" json:"joinedAtRevision,omitempty"`
	Pni              []byte      `protobuf:"bytes,6,opt,name=pni,proto3" json:"pni,omitempty"`
}

func (x *DecryptedMember) Reset() {
	*x = DecryptedMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedMember) ProtoMessage() {}

func (x *DecryptedMember) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedMember.ProtoReflect.Descriptor instead.
func (*DecryptedMember) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{0}
}

func (x *DecryptedMember) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DecryptedMember) GetRole() Member_Role {
	if x != nil {
		return x.Role
	}
	return Member_UNKNOWN
}

func (x *DecryptedMember) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *DecryptedMember) GetJoinedAtRevision() uint32 {
	if x != nil {
		return x.JoinedAtRevision
	}
	return 0
}

func (x *DecryptedMember) GetPni() []byte {
	if x != nil {
		return x.Pni
	}
	return nil
}

type DecryptedPendingMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           []byte      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Role           Member_Role `protobuf:"varint,2,opt,name=role,proto3,enum=Member_Role" json:"role,omitempty"`
	AddedByUuid    []byte      `protobuf:"bytes,3,opt,name=addedByUuid,proto3" json:"addedByUuid,omitempty"`
	Timestamp      uint64      `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UuidCipherText []byte      `protobuf:"bytes,5,opt,name=uuidCipherText,proto3" json:"uuidCipherText,omitempty"`
}

func (x *DecryptedPendingMember) Reset() {
	*x = DecryptedPendingMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedPendingMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedPendingMember) ProtoMessage() {}

func (x *DecryptedPendingMember) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedPendingMember.ProtoReflect.Descriptor instead.
func (*DecryptedPendingMember) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{1}
}

func (x *DecryptedPendingMember) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DecryptedPendingMember) GetRole() Member_Role {
	if x != nil {
		return x.Role
	}
	return Member_UNKNOWN
}

func (x *DecryptedPendingMember) GetAddedByUuid() []byte {
	if x != nil {
		return x.AddedByUuid
	}
	return nil
}

func (x *DecryptedPendingMember) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DecryptedPendingMember) GetUuidCipherText() []byte {
	if x != nil {
		return x.UuidCipherText
	}
	return nil
}

type DecryptedRequestingMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ProfileKey []byte `protobuf:"bytes,2,opt,name=profileKey,proto3" json:"profileKey,omitempty"`
	Timestamp  uint64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DecryptedRequestingMember) Reset() {
	*x = DecryptedRequestingMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedRequestingMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedRequestingMember) ProtoMessage() {}

func (x *DecryptedRequestingMember) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedRequestingMember.ProtoReflect.Descriptor instead.
func (*DecryptedRequestingMember) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{2}
}

func (x *DecryptedRequestingMember) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DecryptedRequestingMember) GetProfileKey() []byte {
	if x != nil {
		return x.ProfileKey
	}
	return nil
}

func (x *DecryptedRequestingMember) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type DecryptedBannedMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *DecryptedBannedMember) Reset() {
	*x = DecryptedBannedMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedBannedMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedBannedMember) ProtoMessage() {}

func (x *DecryptedBannedMember) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedBannedMember.ProtoReflect.Descriptor instead.
func (*DecryptedBannedMember) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{3}
}

func (x *DecryptedBannedMember) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DecryptedBannedMember) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type DecryptedPendingMemberRemoval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UuidCipherText []byte `protobuf:"bytes,2,opt,name=uuidCipherText,proto3" json:"uuidCipherText,omitempty"`
}

func (x *DecryptedPendingMemberRemoval) Reset() {
	*x = DecryptedPendingMemberRemoval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedPendingMemberRemoval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedPendingMemberRemoval) ProtoMessage() {}

func (x *DecryptedPendingMemberRemoval) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedPendingMemberRemoval.ProtoReflect.Descriptor instead.
func (*DecryptedPendingMemberRemoval) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{4}
}

func (x *DecryptedPendingMemberRemoval) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DecryptedPendingMemberRemoval) GetUuidCipherText() []byte {
	if x != nil {
		return x.UuidCipherText
	}
	return nil
}

type DecryptedApproveMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid []byte      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Role Member_Role `protobuf:"varint,2,opt,name=role,proto3,enum=Member_Role" json:"role,omitempty"`
}

func (x *DecryptedApproveMember) Reset() {
	*x = DecryptedApproveMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedApproveMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedApproveMember) ProtoMessage() {}

func (x *DecryptedApproveMember) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedApproveMember.ProtoReflect.Descriptor instead.
func (*DecryptedApproveMember) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{5}
}

func (x *DecryptedApproveMember) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DecryptedApproveMember) GetRole() Member_Role {
	if x != nil {
		return x.Role
	}
	return Member_UNKNOWN
}

type DecryptedModifyMemberRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid []byte      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Role Member_Role `protobuf:"varint,2,opt,name=role,proto3,enum=Member_Role" json:"role,omitempty"`
}

func (x *DecryptedModifyMemberRole) Reset() {
	*x = DecryptedModifyMemberRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedModifyMemberRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedModifyMemberRole) ProtoMessage() {}

func (x *DecryptedModifyMemberRole) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedModifyMemberRole.ProtoReflect.Descriptor instead.
func (*DecryptedModifyMemberRole) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{6}
}

func (x *DecryptedModifyMemberRole) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *DecryptedModifyMemberRole) GetRole() Member_Role {
	if x != nil {
		return x.Role
	}
	return Member_UNKNOWN
}

// Decrypted version of message Group
// Keep field numbers in step
type DecryptedGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                     string                       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Avatar                    string                       `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	DisappearingMessagesTimer *DecryptedTimer              `protobuf:"bytes,4,opt,name=disappearingMessagesTimer,proto3" json:"disappearingMessagesTimer,omitempty"`
	AccessControl             *AccessControl               `protobuf:"bytes,5,opt,name=accessControl,proto3" json:"accessControl,omitempty"`
	Revision                  uint32                       `protobuf:"varint,6,opt,name=revision,proto3" json:"revision,omitempty"`
	Members                   []*DecryptedMember           `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
	PendingMembers            []*DecryptedPendingMember    `protobuf:"bytes,8,rep,name=pendingMembers,proto3" json:"pendingMembers,omitempty"`
	RequestingMembers         []*DecryptedRequestingMember `protobuf:"bytes,9,rep,name=requestingMembers,proto3" json:"requestingMembers,omitempty"`
	InviteLinkPassword        []byte                       `protobuf:"bytes,10,opt,name=inviteLinkPassword,proto3" json:"inviteLinkPassword,omitempty"`
	Description               string                       `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	IsAnnouncementGroup       EnabledState                 `protobuf:"varint,12,opt,name=isAnnouncementGroup,proto3,enum=EnabledState" json:"isAnnouncementGroup,omitempty"`
	BannedMembers             []*DecryptedBannedMember     `protobuf:"bytes,13,rep,name=bannedMembers,proto3" json:"bannedMembers,omitempty"`
}

func (x *DecryptedGroup) Reset() {
	*x = DecryptedGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedGroup) ProtoMessage() {}

func (x *DecryptedGroup) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedGroup.ProtoReflect.Descriptor instead.
func (*DecryptedGroup) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{7}
}

func (x *DecryptedGroup) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DecryptedGroup) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *DecryptedGroup) GetDisappearingMessagesTimer() *DecryptedTimer {
	if x != nil {
		return x.DisappearingMessagesTimer
	}
	return nil
}

func (x *DecryptedGroup) GetAccessControl() *AccessControl {
	if x != nil {
		return x.AccessControl
	}
	return nil
}

func (x *DecryptedGroup) GetRevision() uint32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *DecryptedGroup) GetMembers() []*DecryptedMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *DecryptedGroup) GetPendingMembers() []*DecryptedPendingMember {
	if x != nil {
		return x.PendingMembers
	}
	return nil
}

func (x *DecryptedGroup) GetRequestingMembers() []*DecryptedRequestingMember {
	if x != nil {
		return x.RequestingMembers
	}
	return nil
}

func (x *DecryptedGroup) GetInviteLinkPassword() []byte {
	if x != nil {
		return x.InviteLinkPassword
	}
	return nil
}

func (x *DecryptedGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DecryptedGroup) GetIsAnnouncementGroup() EnabledState {
	if x != nil {
		return x.IsAnnouncementGroup
	}
	return EnabledState_UNKNOWN
}

func (x *DecryptedGroup) GetBannedMembers() []*DecryptedBannedMember {
	if x != nil {
		return x.BannedMembers
	}
	return nil
}

// Decrypted version of message GroupChange.Actions
// Keep field numbers in step
type DecryptedGroupChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Editor                      []byte                           `protobuf:"bytes,1,opt,name=editor,proto3" json:"editor,omitempty"`
	Revision                    uint32                           `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	NewMembers                  []*DecryptedMember               `protobuf:"bytes,3,rep,name=newMembers,proto3" json:"newMembers,omitempty"`
	DeleteMembers               [][]byte                         `protobuf:"bytes,4,rep,name=deleteMembers,proto3" json:"deleteMembers,omitempty"`
	ModifyMemberRoles           []*DecryptedModifyMemberRole     `protobuf:"bytes,5,rep,name=modifyMemberRoles,proto3" json:"modifyMemberRoles,omitempty"`
	ModifiedProfileKeys         []*DecryptedMember               `protobuf:"bytes,6,rep,name=modifiedProfileKeys,proto3" json:"modifiedProfileKeys,omitempty"`
	NewPendingMembers           []*DecryptedPendingMember        `protobuf:"bytes,7,rep,name=newPendingMembers,proto3" json:"newPendingMembers,omitempty"`
	DeletePendingMembers        []*DecryptedPendingMemberRemoval `protobuf:"bytes,8,rep,name=deletePendingMembers,proto3" json:"deletePendingMembers,omitempty"`
	PromotePendingMembers       []*DecryptedMember               `protobuf:"bytes,9,rep,name=promotePendingMembers,proto3" json:"promotePendingMembers,omitempty"`
	NewTitle                    *DecryptedString                 `protobuf:"bytes,10,opt,name=newTitle,proto3" json:"newTitle,omitempty"`
	NewAvatar                   *DecryptedString                 `protobuf:"bytes,11,opt,name=newAvatar,proto3" json:"newAvatar,omitempty"`
	NewTimer                    *DecryptedTimer                  `protobuf:"bytes,12,opt,name=newTimer,proto3" json:"newTimer,omitempty"`
	NewAttributeAccess          AccessControl_AccessRequired     `protobuf:"varint,13,opt,name=newAttributeAccess,proto3,enum=AccessControl_AccessRequired" json:"newAttributeAccess,omitempty"`
	NewMemberAccess             AccessControl_AccessRequired     `protobuf:"varint,14,opt,name=newMemberAccess,proto3,enum=AccessControl_AccessRequired" json:"newMemberAccess,omitempty"`
	NewInviteLinkAccess         AccessControl_AccessRequired     `protobuf:"varint,15,opt,name=newInviteLinkAccess,proto3,enum=AccessControl_AccessRequired" json:"newInviteLinkAccess,omitempty"`
	NewRequestingMembers        []*DecryptedRequestingMember     `protobuf:"bytes,16,rep,name=newRequestingMembers,proto3" json:"newRequestingMembers,omitempty"`
	DeleteRequestingMembers     [][]byte                         `protobuf:"bytes,17,rep,name=deleteRequestingMembers,proto3" json:"deleteRequestingMembers,omitempty"`
	PromoteRequestingMembers    []*DecryptedApproveMember        `protobuf:"bytes,18,rep,name=promoteRequestingMembers,proto3" json:"promoteRequestingMembers,omitempty"`
	NewInviteLinkPassword       []byte                           `protobuf:"bytes,19,opt,name=newInviteLinkPassword,proto3" json:"newInviteLinkPassword,omitempty"`
	NewDescription              *DecryptedString                 `protobuf:"bytes,20,opt,name=newDescription,proto3" json:"newDescription,omitempty"`
	NewIsAnnouncementGroup      EnabledState                     `protobuf:"varint,21,opt,name=newIsAnnouncementGroup,proto3,enum=EnabledState" json:"newIsAnnouncementGroup,omitempty"`
	NewBannedMembers            []*DecryptedBannedMember         `protobuf:"bytes,22,rep,name=newBannedMembers,proto3" json:"newBannedMembers,omitempty"`
	DeleteBannedMembers         []*DecryptedBannedMember         `protobuf:"bytes,23,rep,name=deleteBannedMembers,proto3" json:"deleteBannedMembers,omitempty"`
	PromotePendingPniAciMembers []*DecryptedMember               `protobuf:"bytes,24,rep,name=promotePendingPniAciMembers,proto3" json:"promotePendingPniAciMembers,omitempty"`
}

func (x *DecryptedGroupChange) Reset() {
	*x = DecryptedGroupChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedGroupChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedGroupChange) ProtoMessage() {}

func (x *DecryptedGroupChange) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedGroupChange.ProtoReflect.Descriptor instead.
func (*DecryptedGroupChange) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{8}
}

func (x *DecryptedGroupChange) GetEditor() []byte {
	if x != nil {
		return x.Editor
	}
	return nil
}

func (x *DecryptedGroupChange) GetRevision() uint32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *DecryptedGroupChange) GetNewMembers() []*DecryptedMember {
	if x != nil {
		return x.NewMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetDeleteMembers() [][]byte {
	if x != nil {
		return x.DeleteMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetModifyMemberRoles() []*DecryptedModifyMemberRole {
	if x != nil {
		return x.ModifyMemberRoles
	}
	return nil
}

func (x *DecryptedGroupChange) GetModifiedProfileKeys() []*DecryptedMember {
	if x != nil {
		return x.ModifiedProfileKeys
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewPendingMembers() []*DecryptedPendingMember {
	if x != nil {
		return x.NewPendingMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetDeletePendingMembers() []*DecryptedPendingMemberRemoval {
	if x != nil {
		return x.DeletePendingMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetPromotePendingMembers() []*DecryptedMember {
	if x != nil {
		return x.PromotePendingMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewTitle() *DecryptedString {
	if x != nil {
		return x.NewTitle
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewAvatar() *DecryptedString {
	if x != nil {
		return x.NewAvatar
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewTimer() *DecryptedTimer {
	if x != nil {
		return x.NewTimer
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewAttributeAccess() AccessControl_AccessRequired {
	if x != nil {
		return x.NewAttributeAccess
	}
	return AccessControl_UNKNOWN
}

func (x *DecryptedGroupChange) GetNewMemberAccess() AccessControl_AccessRequired {
	if x != nil {
		return x.NewMemberAccess
	}
	return AccessControl_UNKNOWN
}

func (x *DecryptedGroupChange) GetNewInviteLinkAccess() AccessControl_AccessRequired {
	if x != nil {
		return x.NewInviteLinkAccess
	}
	return AccessControl_UNKNOWN
}

func (x *DecryptedGroupChange) GetNewRequestingMembers() []*DecryptedRequestingMember {
	if x != nil {
		return x.NewRequestingMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetDeleteRequestingMembers() [][]byte {
	if x != nil {
		return x.DeleteRequestingMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetPromoteRequestingMembers() []*DecryptedApproveMember {
	if x != nil {
		return x.PromoteRequestingMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewInviteLinkPassword() []byte {
	if x != nil {
		return x.NewInviteLinkPassword
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewDescription() *DecryptedString {
	if x != nil {
		return x.NewDescription
	}
	return nil
}

func (x *DecryptedGroupChange) GetNewIsAnnouncementGroup() EnabledState {
	if x != nil {
		return x.NewIsAnnouncementGroup
	}
	return EnabledState_UNKNOWN
}

func (x *DecryptedGroupChange) GetNewBannedMembers() []*DecryptedBannedMember {
	if x != nil {
		return x.NewBannedMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetDeleteBannedMembers() []*DecryptedBannedMember {
	if x != nil {
		return x.DeleteBannedMembers
	}
	return nil
}

func (x *DecryptedGroupChange) GetPromotePendingPniAciMembers() []*DecryptedMember {
	if x != nil {
		return x.PromotePendingPniAciMembers
	}
	return nil
}

type DecryptedString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DecryptedString) Reset() {
	*x = DecryptedString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedString) ProtoMessage() {}

func (x *DecryptedString) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedString.ProtoReflect.Descriptor instead.
func (*DecryptedString) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{9}
}

func (x *DecryptedString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DecryptedTimer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration uint32 `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *DecryptedTimer) Reset() {
	*x = DecryptedTimer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedTimer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedTimer) ProtoMessage() {}

func (x *DecryptedTimer) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedTimer.ProtoReflect.Descriptor instead.
func (*DecryptedTimer) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{10}
}

func (x *DecryptedTimer) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type DecryptedGroupJoinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                string                       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Avatar               string                       `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	MemberCount          uint32                       `protobuf:"varint,4,opt,name=memberCount,proto3" json:"memberCount,omitempty"`
	AddFromInviteLink    AccessControl_AccessRequired `protobuf:"varint,5,opt,name=addFromInviteLink,proto3,enum=AccessControl_AccessRequired" json:"addFromInviteLink,omitempty"`
	Revision             uint32                       `protobuf:"varint,6,opt,name=revision,proto3" json:"revision,omitempty"`
	PendingAdminApproval bool                         `protobuf:"varint,7,opt,name=pendingAdminApproval,proto3" json:"pendingAdminApproval,omitempty"`
	Description          string                       `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsAnnouncementGroup  bool                         `protobuf:"varint,9,opt,name=isAnnouncementGroup,proto3" json:"isAnnouncementGroup,omitempty"`
}

func (x *DecryptedGroupJoinInfo) Reset() {
	*x = DecryptedGroupJoinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DecryptGroups_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptedGroupJoinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptedGroupJoinInfo) ProtoMessage() {}

func (x *DecryptedGroupJoinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_DecryptGroups_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptedGroupJoinInfo.ProtoReflect.Descriptor instead.
func (*DecryptedGroupJoinInfo) Descriptor() ([]byte, []int) {
	return file_DecryptGroups_proto_rawDescGZIP(), []int{11}
}

func (x *DecryptedGroupJoinInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DecryptedGroupJoinInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *DecryptedGroupJoinInfo) GetMemberCount() uint32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *DecryptedGroupJoinInfo) GetAddFromInviteLink() AccessControl_AccessRequired {
	if x != nil {
		return x.AddFromInviteLink
	}
	return AccessControl_UNKNOWN
}

func (x *DecryptedGroupJoinInfo) GetRevision() uint32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *DecryptedGroupJoinInfo) GetPendingAdminApproval() bool {
	if x != nil {
		return x.PendingAdminApproval
	}
	return false
}

func (x *DecryptedGroupJoinInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DecryptedGroupJoinInfo) GetIsAnnouncementGroup() bool {
	if x != nil {
		return x.IsAnnouncementGroup
	}
	return false
}

var File_DecryptGroups_proto protoreflect.FileDescriptor

var file_DecryptGroups_proto_rawDesc = []byte{
	0x0a, 0x13, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a,
	0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6e, 0x69,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x6e, 0x69, 0x22, 0xb6, 0x01, 0x0a, 0x16,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x64, 0x64, 0x65, 0x64, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x65, 0x64, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e,
	0x75, 0x75, 0x69, 0x64, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x75, 0x75, 0x69, 0x64, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x22, 0x6d, 0x0a, 0x19, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x49, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5b,
	0x0a, 0x1d, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x75, 0x69, 0x64, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x75, 0x75, 0x69,
	0x64, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x51, 0x0a, 0x19, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xe7,
	0x04, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x4d, 0x0a, 0x19, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x52, 0x19, 0x64, 0x69, 0x73, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0e,
	0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0e, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a,
	0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x13, 0x69, 0x73, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x13, 0x69, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xff, 0x0b, 0x0a, 0x14, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x6e, 0x65, 0x77,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a,
	0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x13, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x45, 0x0a, 0x11, 0x6e,
	0x65, 0x77, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x11, 0x6e, 0x65, 0x77, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x52, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x52, 0x14, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2c,
	0x0a, 0x08, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x09,
	0x6e, 0x65, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2b, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52,
	0x08, 0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x12, 0x6e, 0x65, 0x77,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x52, 0x12, 0x6e, 0x65, 0x77, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x52, 0x0f, 0x6e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x4f, 0x0a, 0x13, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x13, 0x6e,
	0x65, 0x77, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x4e, 0x0a, 0x14, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x14, 0x6e, 0x65,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x53, 0x0a, 0x18,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x15, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x45, 0x0a, 0x16, 0x6e, 0x65, 0x77, 0x49, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x16, 0x6e, 0x65, 0x77, 0x49, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x42, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x16, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x48, 0x0a, 0x13,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x52, 0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6e, 0x69, 0x41, 0x63, 0x69, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x1b, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6e, 0x69,
	0x41, 0x63, 0x69, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xd9, 0x02, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4a, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x11,
	0x61, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x11, 0x61, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x69,
	0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2a, 0x36, 0x0a,
	0x0c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42,
	0x4c, 0x45, 0x44, 0x10, 0x02, 0x42, 0x42, 0x0a, 0x2d, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x01, 0x5a, 0x0f, 0x2e, 0x3b, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_DecryptGroups_proto_rawDescOnce sync.Once
	file_DecryptGroups_proto_rawDescData = file_DecryptGroups_proto_rawDesc
)

func file_DecryptGroups_proto_rawDescGZIP() []byte {
	file_DecryptGroups_proto_rawDescOnce.Do(func() {
		file_DecryptGroups_proto_rawDescData = protoimpl.X.CompressGZIP(file_DecryptGroups_proto_rawDescData)
	})
	return file_DecryptGroups_proto_rawDescData
}

var file_DecryptGroups_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_DecryptGroups_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_DecryptGroups_proto_goTypes = []interface{}{
	(EnabledState)(0),                     // 0: EnabledState
	(*DecryptedMember)(nil),               // 1: DecryptedMember
	(*DecryptedPendingMember)(nil),        // 2: DecryptedPendingMember
	(*DecryptedRequestingMember)(nil),     // 3: DecryptedRequestingMember
	(*DecryptedBannedMember)(nil),         // 4: DecryptedBannedMember
	(*DecryptedPendingMemberRemoval)(nil), // 5: DecryptedPendingMemberRemoval
	(*DecryptedApproveMember)(nil),        // 6: DecryptedApproveMember
	(*DecryptedModifyMemberRole)(nil),     // 7: DecryptedModifyMemberRole
	(*DecryptedGroup)(nil),                // 8: DecryptedGroup
	(*DecryptedGroupChange)(nil),          // 9: DecryptedGroupChange
	(*DecryptedString)(nil),               // 10: DecryptedString
	(*DecryptedTimer)(nil),                // 11: DecryptedTimer
	(*DecryptedGroupJoinInfo)(nil),        // 12: DecryptedGroupJoinInfo
	(Member_Role)(0),                      // 13: Member.Role
	(*AccessControl)(nil),                 // 14: AccessControl
	(AccessControl_AccessRequired)(0),     // 15: AccessControl.AccessRequired
}
var file_DecryptGroups_proto_depIdxs = []int32{
	13, // 0: DecryptedMember.role:type_name -> Member.Role
	13, // 1: DecryptedPendingMember.role:type_name -> Member.Role
	13, // 2: DecryptedApproveMember.role:type_name -> Member.Role
	13, // 3: DecryptedModifyMemberRole.role:type_name -> Member.Role
	11, // 4: DecryptedGroup.disappearingMessagesTimer:type_name -> DecryptedTimer
	14, // 5: DecryptedGroup.accessControl:type_name -> AccessControl
	1,  // 6: DecryptedGroup.members:type_name -> DecryptedMember
	2,  // 7: DecryptedGroup.pendingMembers:type_name -> DecryptedPendingMember
	3,  // 8: DecryptedGroup.requestingMembers:type_name -> DecryptedRequestingMember
	0,  // 9: DecryptedGroup.isAnnouncementGroup:type_name -> EnabledState
	4,  // 10: DecryptedGroup.bannedMembers:type_name -> DecryptedBannedMember
	1,  // 11: DecryptedGroupChange.newMembers:type_name -> DecryptedMember
	7,  // 12: DecryptedGroupChange.modifyMemberRoles:type_name -> DecryptedModifyMemberRole
	1,  // 13: DecryptedGroupChange.modifiedProfileKeys:type_name -> DecryptedMember
	2,  // 14: DecryptedGroupChange.newPendingMembers:type_name -> DecryptedPendingMember
	5,  // 15: DecryptedGroupChange.deletePendingMembers:type_name -> DecryptedPendingMemberRemoval
	1,  // 16: DecryptedGroupChange.promotePendingMembers:type_name -> DecryptedMember
	10, // 17: DecryptedGroupChange.newTitle:type_name -> DecryptedString
	10, // 18: DecryptedGroupChange.newAvatar:type_name -> DecryptedString
	11, // 19: DecryptedGroupChange.newTimer:type_name -> DecryptedTimer
	15, // 20: DecryptedGroupChange.newAttributeAccess:type_name -> AccessControl.AccessRequired
	15, // 21: DecryptedGroupChange.newMemberAccess:type_name -> AccessControl.AccessRequired
	15, // 22: DecryptedGroupChange.newInviteLinkAccess:type_name -> AccessControl.AccessRequired
	3,  // 23: DecryptedGroupChange.newRequestingMembers:type_name -> DecryptedRequestingMember
	6,  // 24: DecryptedGroupChange.promoteRequestingMembers:type_name -> DecryptedApproveMember
	10, // 25: DecryptedGroupChange.newDescription:type_name -> DecryptedString
	0,  // 26: DecryptedGroupChange.newIsAnnouncementGroup:type_name -> EnabledState
	4,  // 27: DecryptedGroupChange.newBannedMembers:type_name -> DecryptedBannedMember
	4,  // 28: DecryptedGroupChange.deleteBannedMembers:type_name -> DecryptedBannedMember
	1,  // 29: DecryptedGroupChange.promotePendingPniAciMembers:type_name -> DecryptedMember
	15, // 30: DecryptedGroupJoinInfo.addFromInviteLink:type_name -> AccessControl.AccessRequired
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_DecryptGroups_proto_init() }
func file_DecryptGroups_proto_init() {
	if File_DecryptGroups_proto != nil {
		return
	}
	file_Groups_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_DecryptGroups_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedPendingMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedRequestingMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedBannedMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedPendingMemberRemoval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedApproveMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedModifyMemberRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedGroupChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedTimer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DecryptGroups_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptedGroupJoinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DecryptGroups_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DecryptGroups_proto_goTypes,
		DependencyIndexes: file_DecryptGroups_proto_depIdxs,
		EnumInfos:         file_DecryptGroups_proto_enumTypes,
		MessageInfos:      file_DecryptGroups_proto_msgTypes,
	}.Build()
	File_DecryptGroups_proto = out.File
	file_DecryptGroups_proto_rawDesc = nil
	file_DecryptGroups_proto_goTypes = nil
	file_DecryptGroups_proto_depIdxs = nil
}
